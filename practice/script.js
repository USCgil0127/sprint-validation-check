// [ÏóòÎ¶¨Î®ºÌä∏ Î≥ÄÏàò]
const elErrorMessage = document.querySelector('#invalid-message');

// [Ïú†Ìö®ÏÑ± Í≤ÄÏ¶ù Ìï®Ïàò]: nÍ∞úÏùò Í∏ÄÏûê Ïù¥ÏÉÅ
function moreThanLength(str, n) {
  return str.length >= n;
}

// [Ïú†Ìö®ÏÑ± Í≤ÄÏ¶ù Ìï®Ïàò]: ÏòÅÏñ¥ ÎòêÎäî Ïà´ÏûêÎßå Í∞ÄÎä•
function onlyNumberAndEnglish(str) {
  return /^[A-Za-z][A-Za-z0-9]*$/.test(str);
}

// Ìú¥ÎåÄÌè∞ Î≤àÌò∏ Í≤ÄÏ¶ù Ìï®Ïàò 
function phoneNumber(str) {
  return /^\d{3}-\d{3,4}-\d{4}$/.test(str);
}

// [Ïú†Ìö®ÏÑ± Í≤ÄÏ¶ù Ìï®Ïàò]: ÏµúÏÜå 8Ïûê Ïù¥ÏÉÅÌïòÎ©¥ÏÑú, ÏïåÌååÎ≤≥Í≥º Ïà´Ïûê Î∞è ÌäπÏàòÎ¨∏Ïûê(@$!%*#?&) Îäî ÌïòÎÇò Ïù¥ÏÉÅ Ìè¨Ìï®
function strongPassword(str) {
  return /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/.test(str);
}

// [ÏãúÍ∞ÅÏ†Å ÌîºÎìúÎ∞±]: ÏóêÎü¨Î©îÏãúÏßÄÎ•º ÎùÑÏõÅÎãàÎã§
function displayErrorMessage(message) {
  elErrorMessage.classList.add('show');
  elErrorMessage.textContent = message;
}

const inputform = document.body.querySelectorAll("label");

inputform[0].addEventListener( "input", (el)=> {

  if( elErrorMessage.className ){
    elErrorMessage.classList.remove('show');
  }

  const inputText = el.target.closest('input[type="text"]').value;
  if(!inputText) return;

  if( moreThanLength( inputText, 8) && onlyNumberAndEnglish(inputText) ){
    const classLength = inputform[0].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[0].classList.item(i) === "invalid" ){
      inputform[0].classList.remove("invalid");
    }

  }
  inputform[0].classList.add("valid");
  }
  else{
    const classLength = inputform[0].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[0].classList.item(i) === "valid" ){
      inputform[0].classList.remove("valid");
    }

  }
  inputform[0].classList.add("invalid");
  }

});

inputform[1].addEventListener( "input", (el)=> {
  const inputText = el.target.closest('input[type="text"]').value;
  if(!inputText) return;

  if( elErrorMessage.className ){
    elErrorMessage.classList.remove('show');
  }
  
  if( phoneNumber(inputText) ){
    const classLength = inputform[1].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[1].classList.item(i) === "invalid" ){
      inputform[1].classList.remove("invalid");
    }

  }
  inputform[1].classList.add("valid");
  }
  else{
    const classLength = inputform[1].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[1].classList.item(i) === "valid" ){
      inputform[1].classList.remove("valid");
    }

  }
  inputform[1].classList.add("invalid");
  }

});

inputform[2].addEventListener( "input", (el)=> {
  const inputText = el.target.closest('input[type="text"]').value;
  if(!inputText) return;

  if( elErrorMessage.className ){
    elErrorMessage.classList.remove('show');
  }
  
  if( strongPassword(inputText) ){
    const classLength = inputform[2].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[2].classList.item(i) === "invalid" ){
      inputform[2].classList.remove("invalid");
    }

  }
  inputform[2].classList.add("valid");
  const spanClass =  inputform[2].querySelector(".message");
  // spanClass.textContent = "";
  const iClass =  inputform[2].querySelector("i");

  for(let i = 0; i < iClass.classList.length; i++){
    if( iClass.classList.item(i) === "fa-times" ){
      iClass.classList.remove("fa-times");
      iClass.classList.add("fa-check-circle");
      iClass.nextSibling.textContent = "";
    }
  }    

  }
  else{
    const classLength = inputform[2].classList.length;

  for(let i = 0; i < classLength; i++){

    if( inputform[2].classList.item(i) === "valid" ){
      inputform[2].classList.remove("valid");
    }

  }
  inputform[2].classList.add("invalid");
  }

});

const formTag = document.querySelector("form");
formTag.addEventListener( "submit", (el) => {
    el.preventDefault();
   // console.dir(el);
   // console.dir(el.target.form.input[0].value);
   //const inputBox = el.target;
   //console.dir(inputBox);

   // Îã¥Í∏¥Îã§.
   let textBox = document.body.querySelectorAll('input[type="text"]');
   
   if( moreThanLength( textBox[0].value, 8) && onlyNumberAndEnglish(textBox[0].value) && phoneNumber(textBox[1].value) && strongPassword( textBox[2].value) ){
    displayErrorMessage(' Successfully registered üëç ');
    for(let i=0; i<textBox.length; i++){
      textBox[i].value = "";
    }
   }
   else{
    displayErrorMessage('insufficient requirements to register üò•');
   }

});






// //////////////////////// Ïù¥Î≤§Ìä∏ ÏúÑÏûÑÏùÑ Ïù¥Ïö©Ìïú Î∞©Î≤ï
// Í∑∏Îü¨ÎÇò, ÌÉúÍ∑∏ÎßàÎã§ ÎÑòÍ≤®Ï§òÏïº Îê† Ï†ïÍ∑úÌëúÌòÑÏãù Ìï®ÏàòÍ∞Ä Îã¨ÎùºÏÑú, Ïã§Ìå®ÌñàÎã§.

// const container = document.body.querySelector("div.form");

// container.addEventListener( "input", (el)=> {
//   const inputText = el.target.closest('input[type="text"]').value;
//   if(!inputText) return;

//   const label = el.target.closest('input[type="text"]').parentElement;

//   console.log( inputText );

//   console.log( label );

//   ////////////////////

//   if( moreThanLength( inputText, 8) && onlyNumberAndEnglish(inputText) ){
//     // if Ï†àÏù¥ ÌÜµÍ≥ºÍ∞Ä ÎêòÎ©¥, Ïó¨Í∏∞Î°ú
//     const classLength = label.classList.length;

//   for(let i = 0; i < classLength; i++){

//     if( label.classList.item(i) === "invalid" ){
//         label.classList.remove("invalid");
//     }

//   }
//     label.classList.add("valid");
//   }
//   else{
//     // ÏïÑÎãàÎ©¥, Ïó¨Í∏∞Î°ú
//     const classLength = label.classList.length;

//   for(let i = 0; i < classLength; i++){

//     if( label.classList.item(i) === "valid" ){
//         label.classList.remove("valid");
//     }

//   }
//     label.classList.add("invalid");
//   }

// });

// [ÌÖåÏä§Ìä∏ ÏΩîÎìú]  6Ïù¥ÎÇò 11 Ïù¥ÏÉÅÏù¥ ÎêòÏñ¥Ïïº ÎêòÎäîÍµ¨ÎÇò
// console.log('`codestates`Îäî 6Í∏ÄÏûê Ïù¥ÏÉÅÏù¥ÎØÄÎ°ú', moreThanLength('codestates', 6))
// console.log('`codestates`Îäî 11Í∏ÄÏûê Ïù¥ÌïòÏù¥ÎØÄÎ°ú', moreThanLength('codestates', 11))
// console.log('`codestates`Îäî ÏòÅÏñ¥Îßå Ìè¨Ìï®ÌïòÎØÄÎ°ú', onlyNumberAndEnglish('codestates'))
// console.log('`ÍπÄcoding`ÏùÄ ÏòÅÏñ¥ Ïô∏Ïùò Îã§Î•∏ Í∏ÄÏûêÎèÑ Ìè¨Ìï®ÌïòÎØÄÎ°ú', onlyNumberAndEnglish('ÍπÄcoding'))
// console.log('`ÍπÄÏΩîÎî©`ÏùÄ ÏòÅÏñ¥ Ïô∏Ïùò Îã§Î•∏ Í∏ÄÏûêÎèÑ Ìè¨Ìï®ÌïòÎØÄÎ°ú', onlyNumberAndEnglish('ÍπÄÏΩîÎî©'))
// console.log('`qwerty`Îäî Ï∂©Î∂ÑÌûà Í∞ïÎ†•ÌïòÏßÄ ÏïäÏùÄ ÏïîÌò∏Ïù¥ÎØÄÎ°ú', strongPassword('qwerty'))
// console.log('`q1w2e3r4`Îäî ÌäπÏàòÎ¨∏ÏûêÎ•º Ìè¨Ìï®ÌïòÏßÄ ÏïäÏúºÎØÄÎ°ú', strongPassword('q1w2e3r4'))
// console.log('`q1w2e3r4!`Îäî Ï°∞Í±¥ÏùÑ Ï∂©Ï°±ÌïòÎØÄÎ°ú', strongPassword('q1w2e3r4!'))

// displayErrorMessage('insufficient requirements to register')
